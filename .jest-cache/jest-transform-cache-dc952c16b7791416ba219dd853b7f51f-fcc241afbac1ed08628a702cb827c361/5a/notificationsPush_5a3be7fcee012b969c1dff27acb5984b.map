{"version":3,"names":["fcm","require","pool","pushNotification","notification","registration_ids","sendNotification","JSON","stringify","length","split","then","response","console","log","catch","error","finally","addNotificationToDB","message","query","client","connect","meal_id","receiver","body","sender","type","click_action","icon","title","resp","rows","release","addNotification","tokens","answer","module","exports"],"sources":["notificationsPush.js"],"sourcesContent":["const fcm = require('../firebaseCloudMessages');\nconst pool = require('../db.js');\n\nconst pushNotification = (notification, registration_ids) => {\n  return fcm.sendNotification(JSON.stringify({\n    notification: notification,\n    'registration_ids': registration_ids !== null && registration_ids.length > 0 ? registration_ids.split(';') : ''\n  }))\n    .then(response => {\n      console.log(JSON.stringify(`Got a response from fcm: ${JSON.stringify(response)}`));\n      return response;\n    })\n    .catch(error => {\n      console.error(`Error in sendNotification: ${JSON.stringify(error)}`);\n      return error;\n    })\n    .finally(() => {\n      console.log('pushNotification done.');\n    });\n};\n\nconst addNotificationToDB = async (message) => {\n\n  //example of param:\n  // const message =\n  // {\n  //   title: 'Attend',\n  //   body:  'A user wants to join your meal',\n  //   icon: 'resources/Message-Bubble-icon.png',\n  //   click_action: '/Meals/',\n  //   receiver: attend.user_id,\n  //   meal_id:  attend.meal_id,\n  //   sender: -1,\n  //   type: 5\n  // }\n\n  const query = `\n  INSERT INTO notifications (meal_id, receiver, message_text, sender, note_type, \n        click_action, icon, title) \n      VALUES (\n       $1, $2, $3, $4, $5, $6, $7, $8)\n\n    RETURNING (\n            SELECT array_to_string(array_agg(token),';') \n            AS tokens \n            FROM user_tokens\n            WHERE user_id=$2 \n          )\n    `;\n  const client = await pool.connect();\n  console.log(`Connected.`);\n  return client.query(query,\n    [message.meal_id,\n      message.receiver,\n      message.body,\n      message.sender,\n      message.type,\n      message.click_action,\n      message.icon,\n      message.title\n    ])\n    .then(resp => {\n      console.log(`Message inserted successfully.`);\n      console.log(`tokens: ${JSON.stringify(resp.rows)}`);\n      return resp;\n    })\n    .catch(error => {\n      console.error(`error: ${JSON.stringify(error)}`);\n      return error;\n    })\n    .finally(() => {\n      client.release();\n    });\n};\n\n//add notificatin/message to the DB + push\nconst addNotification = async (notification) => {\n  return addNotificationToDB(notification)\n    .then(resp => {\n      const tokens = resp.rows[0].tokens;\n      console.log(`Resp tokens: ${JSON.stringify(tokens)}.`);\n      return pushNotification(notification, tokens)\n        .then(answer => {\n          console.log(`Answer: ${JSON.stringify(answer)}.`);\n          return answer;\n        })\n        .catch(error => {\n          console.error(`pushNotification failed: ${JSON.stringify(error)}.`);\n        });\n    })\n    .catch(error => {\n      console.error(`addNotificationToDB failed: ${JSON.stringify(error)}.`);\n    });\n};\n\nmodule.exports = addNotification;"],"mappings":"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","ignoreList":[]}