# Secret Check Rule

**CRITICAL**: ALWAYS check for leaked secrets before committing.

## What to Check:
- API keys (Google Maps, AWS, etc.)
- Database passwords
- JWT secrets
- Private keys
- Access tokens
- Any hardcoded credentials

## Common Patterns to Search:
- `AIzaSyB...` (Google Maps API keys)
- `AKIA...` (AWS access keys)
- `sk-...` (OpenAI/other API keys)
- `ghp_...` (GitHub tokens)
- `password=`, `secret=`, `key=`
- Database connection strings
- JWT secrets longer than 20 characters

## Before Every Commit:
1. **Search for secrets** in changed files
2. **Check git diff** for any hardcoded values
3. **Use environment variables** instead of hardcoded secrets
4. **Add files with secrets to .gitignore**

## Commands to Run:
```bash
# Search for common secret patterns
grep -r "AIzaSyB\|AKIA\|sk-\|ghp_" .
grep -r "password.*=" .
grep -r "secret.*=" .

# Check what's being committed
git diff --cached
```

## If Secrets Found:
1. **IMMEDIATELY** remove from commit
2. **Rotate the exposed secrets**
3. **Use environment variables**
4. **Add to .gitignore**

**Remember**: Once secrets are in git history, they're compromised!
description:
globs:
alwaysApply: false
---
