# Multi-stage Dockerfile for Tabsur Server - Optimized for Speed
FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache curl

# Create app directory and user
WORKDIR /app
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
FROM base AS deps
RUN npm ci --cache .npm --prefer-offline --no-audit --no-fund

# Development stage
FROM base AS debug
COPY --from=deps /app/node_modules ./node_modules
COPY server.js ./
COPY routes/ ./routes/
COPY config/ ./config/
COPY validation/ ./validation/
COPY middleware/ ./middleware/
COPY .env* ./

# Install nodemon for development
RUN npm install -g nodemon

# Set ownership
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5000/api/system/health || exit 1

# Development command
CMD ["nodemon", "server.js"]

# Production stage
FROM base AS production
COPY --from=deps /app/node_modules ./node_modules
COPY server.js ./
COPY routes/ ./routes/
COPY config/ ./config/
COPY validation/ ./validation/
COPY middleware/ ./middleware/
COPY .env* ./

# Set ownership
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5000/api/system/health || exit 1

# Production command
CMD ["node", "server.js"]
